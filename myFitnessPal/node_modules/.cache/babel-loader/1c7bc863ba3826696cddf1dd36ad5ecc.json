{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jatin\\\\OneDrive\\\\Desktop\\\\rr\\\\my-app\\\\src\\\\context\\\\AuthContext.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext({\n  token: \"\",\n  handleToken: () => {}\n});\nexport const AuthContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [token, setToken] = useState(\"\");\n\n  const handleToken = token => {\n    setToken(token);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      token,\n      handleToken\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 12\n  }, this);\n};\n\n_s(AuthContextProvider, \"HeTB14k4IcGUUAYvyMBBk981l/E=\");\n\n_c = AuthContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["C:/Users/jatin/OneDrive/Desktop/rr/my-app/src/context/AuthContext.jsx"],"names":["createContext","useState","AuthContext","token","handleToken","AuthContextProvider","children","setToken"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,OAAxC;;AAGA,OAAO,MAAMC,WAAW,gBAAGF,aAAa,CAAC;AAACG,EAAAA,KAAK,EAAC,EAAP;AAAUC,EAAAA,WAAW,EAAC,MAAI,CAAE;AAA5B,CAAD,CAAjC;AAEP,OAAO,MAAMC,mBAAmB,GAAE,QAAe;AAAA;;AAAA,MAAd;AAACC,IAAAA;AAAD,GAAc;AAC7C,QAAM,CAACH,KAAD,EAAOI,QAAP,IAAmBN,QAAQ,CAAC,EAAD,CAAjC;;AACA,QAAMG,WAAW,GAAID,KAAD,IAAU;AAC1BI,IAAAA,QAAQ,CAACJ,KAAD,CAAR;AACH,GAFD;;AAGA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAACA,MAAAA,KAAD;AAAOC,MAAAA;AAAP,KAA7B;AAAA,cACFE;AADE;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH,CARM;;GAAMD,mB;;KAAAA,mB","sourcesContent":["import { createContext, useState } from \"react\";\n\n\nexport const AuthContext = createContext({token:\"\",handleToken:()=>{}});\n\nexport const AuthContextProvider =({children}) =>{\n    const [token,setToken] = useState(\"\");\n    const handleToken = (token) =>{\n        setToken(token);\n    }\n    return <AuthContext.Provider value={{token,handleToken}}>\n        {children}\n    </AuthContext.Provider>\n} "]},"metadata":{},"sourceType":"module"}